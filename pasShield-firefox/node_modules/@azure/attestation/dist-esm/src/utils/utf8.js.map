{"version":3,"file":"utf8.js","sourceRoot":"","sources":["../../../src/utils/utf8.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAOlC,kFAAkF;AAClF,+EAA+E;AAC/E,sFAAsF;AACtF,4EAA4E;AAC5E,MAAM,OAAO,GACX,OAAO,MAAM,KAAK,WAAW;IAC3B,CAAC,CAAC,iEAAiE;QACjE,IAAI,CAAC,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,OAAO,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC;IAC3D,CAAC,CAAC,SAAS,CAAC;AAEhB,MAAM,OAAO,GACX,OAAO,MAAM,KAAK,WAAW;IAC3B,CAAC,CAAC,iEAAiE;QACjE,IAAI,CAAC,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,OAAO,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC;IAC3D,CAAC,CAAC,SAAS,CAAC;AAEhB,MAAM,MAAM,GAAoC,OAAO;IACrD,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;IACpC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAE,MAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAErD,MAAM,MAAM,GAAgC,OAAO;IACjD,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;IAC9B,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAEtC;;;;GAIG;AACH,MAAM,UAAU,aAAa,CAAC,OAAe;IAC3C,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC;AACzB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,aAAa,CAAC,OAAmB;IAC/C,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC;AACzB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\ndeclare let TextDecoder:\n  | undefined\n  | (new () => { decode(buffer: ArrayBuffer | ArrayBufferView): string });\ndeclare let TextEncoder: undefined | (new () => { encode(str: string): ArrayBuffer });\n\n// TextDecoder and TextEncoder are in the global namespace for Node version 11 and\n// higher, but before that, they were in the \"util\" namespace. If we're running\n// under node (\"Buffer\" is defined), then check to see if the global namespace version\n// of the decoders are present, if not, import them from the util namespace.\nconst decoder =\n  typeof Buffer === \"undefined\"\n    ? // eslint-disable-next-line @typescript-eslint/no-require-imports\n      new (TextDecoder ?? require(\"util\").TextDecoder)(\"ascii\")\n    : undefined;\n\nconst encoder =\n  typeof Buffer === \"undefined\"\n    ? // eslint-disable-next-line @typescript-eslint/no-require-imports\n      new (TextEncoder ?? require(\"util\").TextEncoder)(\"ascii\")\n    : undefined;\n\nconst decode: (buffer: ArrayBuffer) => string = decoder\n  ? (buffer) => decoder.decode(buffer)\n  : (buffer) => (buffer as Buffer).toString(\"ascii\");\n\nconst encode: (str: string) => Uint8Array = encoder\n  ? (str) => encoder.encode(str)\n  : (str) => Buffer.from(str, \"utf8\");\n\n/**\n * Converts a string into a utf8 encoded byte array.\n * @param content - The utf8 string to convert.\n * @internal\n */\nexport function stringToBytes(content: string): Uint8Array {\n  return encode(content);\n}\n\n/**\n * Converts a utf8 string into a byte array.\n * @param content - The utf8 string to convert.\n * @internal\n */\nexport function bytesToString(content: Uint8Array): string {\n  return decode(content);\n}\n"]}